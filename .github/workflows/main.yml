name: Node.js CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    # Install and build frontend
    - name: Install frontend dependencies
      run: npm install

    - name: Build frontend
      run: |
        npm run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
        VITE_CLOUD_NAME: ${{ secrets.VITE_CLOUD_NAME }}
        VITE_UPLOAD_PRESET: ${{ secrets.VITE_UPLOAD_PRESET }}
        VITE_PUBLISHABLE_KEY: ${{ secrets.VITE_PUBLISHABLE_KEY }}
        VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}
        VITE_SENTRY_CLIENT_AUTH_TOKEN: ${{ secrets.VITE_SENTRY_CLIENT_AUTH_TOKEN }}
        VITE_SENTRY_SERVER_AUTH_TOKEN: ${{ secrets.VITE_SENTRY_SERVER_AUTH_TOKEN }}

    # Install dependencies and build backend
    - name: Install server dependencies and build
      run: |
        npm install --prefix server
        npm run build --prefix server

    # Move package.json and public/ to api
    # Create a log directory and file to track cron job
    - name: Prepare api directory
      run: |
        mv server/package.json api/
        mv server/public       api/public
        mkdir                  api/logs
        touch                  api/logs/IGToken.txt


    # Create .env in api and populate it
    - name: Create .env and populate
      run: |
        echo "EMAIL=${{ secrets.EMAIL }}" >> api/.env
        echo "EMAILPASS=${{ secrets.EMAILPASS }}" >> api/.env
        echo "PG_USER=${{ secrets.PG_USER }}" >> api/.env        
        echo "PG_HOST=${{ secrets.PG_HOST }}" >> api/.env
        echo "PG_DATABASE=${{ secrets.PG_DATABASE }}" >> api/.env
        echo "PG_PASSWORD=${{ secrets.PG_PASSWORD }}" >> api/.env
        echo "PG_PORT=${{ secrets.PG_PORT }}" >> api/.env
        echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> api/.env
        echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> api/.env
        echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> api/.env
        echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> api/.env
        echo "STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}" >> api/.env
        echo "WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }}" >> api/.env
        echo "ACCOUNT_ID=${{ secrets.ACCOUNT_ID }}" >> api/.env
        echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> api/.env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> api/.env

    # Install dependencies in api
    - name: Install api dependencies
      run: |
        npm install --prefix api

    # Deploy frontend and backend to Digital Ocean
    - name: Deploy to Digital Ocean
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.SSH_KEY }}
        source: "./client/*,./api/*"
        target: "/var/www/html/sabus_cubs/"

    # Restart backend with PM2
    - name: Restart backend
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /var/www/html/sabus_cubs/api
          pm2 restart all || pm2 start server.js --name sabus_cubs
